version: "3.6"
services:
  app:
    build:
      args:
        user: user
        uid: 1000
      context: ./
      dockerfile: docker-compose/php/Dockerfile
    container_name: telegram-app
    environment:
      XDEBUG_CONFIG: "remote_host=localhost:9003 remote_enable=1"
      PHP_IDE_CONFIG: "serverName=Docker"
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./docker-compose/php/php.ini:/usr/local/etc/php/php.ini
    networks:
      - telegram

  worker:
    build:
      args:
        user: user
        uid: 1000
      context: ./
      dockerfile: docker-compose/queues/Dockerfile
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - redis
    working_dir: /var/www/
    command: bash -c "php artisan rabbitmq:queue-declare telegram
      && php artisan rabbitmq:exchange-declare telegram --type=fanout
      && php artisan rabbitmq:queue-bind telegram telegram
      && php artisan rabbitmq:consume --queue=telegram"
    volumes:
      - ./:/var/www
    networks:
      - telegram

  db:
    image: mysql:5.7
    container_name: telegram-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - 3306:3306
    volumes:
      - dbdata:/var/lib/mysql/
    networks:
      - telegram

  nginx:
    image: nginx:alpine
    container_name: telegram-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - telegram

  node:
    build:
      context: ./
      dockerfile: docker-compose/node/Dockerfile
    restart: unless-stopped
    container_name: telegram-node
    ports:
      - 2223:2223
    volumes:
      - ./node:/var/www/node
      - ./package.json:/var/www/package.json
      - ./package-lock.json:/var/www/package-lock.json
    networks:
      - telegram

  rabbitmq:
    image: rabbitmq:3.6-management-alpine
    container_name: telegram-rabbit
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./docker-compose/rabbitmq/data/:/var/lib/rabbitmq/mnesia
      - ./docker-compose/rabbitmq/log/:/var/log/rabbitmq/
      - ./docker-compose/rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - telegram

  redis:
    image: redis:alpine
    container_name: telegram-redis
    command: redis-server --requirepass root
    ports:
      - 6379:6379
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - ./docker-compose/redis/redis-data/:/var/lib/rabbitmq/
      - ./docker-compose/redis/redis.conf:/var/log/rabbitmq/
    networks:
      - telegram

networks:
  telegram:
    driver: bridge

volumes:
  dbdata:
    driver: local